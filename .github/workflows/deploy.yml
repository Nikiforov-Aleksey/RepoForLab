name: Build and Upload Webbooks to Yandex Cloud Storage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_ENDPOINT: 'storage.yandexcloud.net'
  S3_BUCKET: 'webbooks-artifacts'
  S3_FOLDER: 'artifacts'
  PROJECT_DIR: 'apps/webbooks'  # Указываем путь к проекту

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Verify Maven Wrapper
      run: |
        cd ${{ env.PROJECT_DIR }}
        if [ ! -f "./mvnw" ]; then
          echo "Error: Maven wrapper not found at ${{ env.PROJECT_DIR }}/mvnw"
          exit 1
        fi
        chmod +x ./mvnw
        ./mvnw --version
    
    - name: Build with Maven
      run: |
        cd ${{ env.PROJECT_DIR }}
        ./mvnw clean package -DskipTests
      
    - name: Install AWS CLI
      run: sudo apt-get install -y awscli
        
    - name: Configure S3 credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.YC_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_SECRET_KEY }}
      run: |
        mkdir -p ~/.aws
        cat > ~/.aws/config <<EOF
        [default]
        region = ru-central1
        s3 =
          endpoint_url = https://${{ env.S3_ENDPOINT }}
          signature_version = s3v4
        EOF
        
        cat > ~/.aws/credentials <<EOF
        [default]
        aws_access_key_id = $AWS_ACCESS_KEY_ID
        aws_secret_access_key = $AWS_SECRET_ACCESS_KEY
        EOF
    
    - name: Upload to Yandex Cloud Storage
      run: |
        cd ${{ env.PROJECT_DIR }}
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        COMMIT_HASH=$(git rev-parse --short HEAD)
        ARTIFACT_NAME="webbooks-${TIMESTAMP}-${COMMIT_HASH}.jar"
        
        mv target/*.jar ${ARTIFACT_NAME}
        aws --endpoint-url=https://${{ env.S3_ENDPOINT }} s3 cp \
          ${ARTIFACT_NAME} \
          s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/
        
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        echo "S3_PATH=s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/${ARTIFACT_NAME}" >> $GITHUB_ENV
    
    - name: Output upload information
      run: |
        echo "Artifact successfully uploaded to Yandex Cloud Storage"
        echo "Artifact name: ${{ env.ARTIFACT_NAME }}"
        echo "S3 Path: ${{ env.S3_PATH }}"
        
    - name: Deploy infrastructure
      env:
        TF_VM_IP: '158.160.184.242'
        TF_VAR_artifact_path: ${{ env.S3_PATH }}
        TF_VAR_yc_access_key: ${{ secrets.YC_ACCESS_KEY }}
        TF_VAR_yc_secret_key: ${{ secrets.YC_SECRET_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no naa@${{ env.TF_VM_IP }} "
          cd ${{ env.TF_DIR }}
          terraform init
          terraform apply -auto-approve \
            -var='artifact_path=${{ env.S3_PATH }}' \
            -var='yc_access_key=${{ secrets.YC_ACCESS_KEY }}' \
            -var='yc_secret_key=${{ secrets.YC_SECRET_KEY }}'
        "
