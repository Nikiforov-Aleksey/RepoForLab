name: Build, Test and Deploy Webbooks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_ENDPOINT: 'storage.yandexcloud.net'
  S3_BUCKET: 'webbooks-artifacts'
  S3_FOLDER: 'artifacts'
  PROJECT_DIR: 'apps/webbooks'
  TF_VM_IP: '158.160.184.242'
  TF_PATH: '~/RepoForLab/infra'

jobs:
  lint:
    name: Lint and Validate
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Run Checkstyle
      run: |
        cd ${{ env.PROJECT_DIR }}
        ./mvnw checkstyle:check

  build:
    name: Build and Upload Artifact
    needs: lint
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: |
        cd ${{ env.PROJECT_DIR }}
        ./mvnw clean package -DskipTests
      
    - name: Install AWS CLI
      run: sudo apt-get install -y awscli
        
    - name: Configure S3 credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.YC_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_SECRET_KEY }}
      run: |
        mkdir -p ~/.aws
        cat > ~/.aws/config <<EOF
        [default]
        region = ru-central1
        s3 =
          endpoint_url = https://${{ env.S3_ENDPOINT }}
          signature_version = s3v4
        EOF
        
        cat > ~/.aws/credentials <<EOF
        [default]
        aws_access_key_id = $AWS_ACCESS_KEY_ID
        aws_secret_access_key = $AWS_SECRET_ACCESS_KEY
        EOF
    
    - name: Upload to Yandex Cloud Storage
      run: |
        cd ${{ env.PROJECT_DIR }}
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        COMMIT_HASH=$(git rev-parse --short HEAD)
        ARTIFACT_NAME="webbooks-${TIMESTAMP}-${COMMIT_HASH}.jar"
        
        mv target/*.jar ${ARTIFACT_NAME}
        aws --endpoint-url=https://${{ env.S3_ENDPOINT }} s3 cp \
          ${ARTIFACT_NAME} \
          s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/
        
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        echo "S3_PATH=s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/${ARTIFACT_NAME}" >> $GITHUB_ENV
    
    - name: Output upload information
      run: |
        echo "Artifact successfully uploaded to Yandex Cloud Storage"
        echo "Artifact name: ${{ env.ARTIFACT_NAME }}"
        echo "S3 Path: ${{ env.S3_PATH }}"

  deploy:
    name: Deploy to Infrastructure
    needs: build
    runs-on: ubuntu-22.04
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.TF_VM_IP }} >> ~/.ssh/known_hosts
    
    - name: Trigger Terraform deployment
      run: |
        ssh naa@${{ env.TF_VM_IP }} "cd ${{ env.TF_PATH }} && \
          export TF_VAR_artifact_name=${{ env.ARTIFACT_NAME }} && \
          export TF_VAR_artifact_path=${{ env.S3_PATH }} && \
          terraform init && \
          terraform apply -auto-approve"
    
    - name: Verify deployment
      run: |
        FRONTEND_URL=$(ssh naa@${{ env.TF_VM_IP }} "cd ${{ env.TF_PATH }} && terraform output -raw frontend_url")
        echo "Frontend URL: $FRONTEND_URL"
        curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL" | grep -q 200 || exit 1
    
    - name: Send notification
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
        SLACK_TITLE: 'Deployment ${{ job.status }}'
        SLACK_MESSAGE: 'Deployment of ${{ github.repository }}@${{ github.sha }} ${{ job.status }}.\nFrontend URL: $FRONTEND_URL\nLogs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
